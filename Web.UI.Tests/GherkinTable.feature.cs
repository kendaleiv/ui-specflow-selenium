// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34003
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Web.UI.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class GherkinTableFeature : Xunit.IUseFixture<GherkinTableFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "GherkinTable.feature"
#line hidden
        
        public GherkinTableFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "GherkinTable", "In order to demonstrate Gherkin tables\r\nAs a developer\r\nI want to do some simple " +
                    "tests using Gherkin tables", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SetFixture(GherkinTableFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "GherkinTable")]
        [Xunit.TraitAttribute("Description", "Class list count")]
        public virtual void ClassListCount()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Class list count", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Instructor",
                        "Location",
                        "Scheduled"});
            table1.AddRow(new string[] {
                        "Introduction to Command",
                        "Janeway",
                        "Ready Room",
                        "4/3/2014 8:00 AM"});
            table1.AddRow(new string[] {
                        "Logic And You",
                        "Tuvok",
                        "Starboard Large Meeting Room",
                        "4/3/2014 9:00 AM"});
            table1.AddRow(new string[] {
                        "Warp Core Basics",
                        "Torres",
                        "Engineering Meeting Room 3",
                        "4/3/2014 9:00 AM"});
            table1.AddRow(new string[] {
                        "Fundamentals of Cooking",
                        "Neelix",
                        "Mess Hall",
                        "4/3/2014 10:00 AM"});
#line 7
 testRunner.Given("I have the course information", ((string)(null)), table1, "Given ");
#line 13
 testRunner.When("I get a list of available courses", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
 testRunner.Then("I should see there are 4 courses", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "GherkinTable")]
        [Xunit.TraitAttribute("Description", "Get instructor for course")]
        public virtual void GetInstructorForCourse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get instructor for course", ((string[])(null)));
#line 16
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Instructor",
                        "Location",
                        "Scheduled"});
            table2.AddRow(new string[] {
                        "Introduction to Command",
                        "Janeway",
                        "Ready Room",
                        "4/3/2014 8:00 AM"});
            table2.AddRow(new string[] {
                        "Logic And You",
                        "Tuvok",
                        "Starboard Large Meeting Room",
                        "4/3/2014 9:00 AM"});
            table2.AddRow(new string[] {
                        "Warp Core Basics",
                        "Torres",
                        "Engineering Meeting Room 3",
                        "4/3/2014 9:00 AM"});
            table2.AddRow(new string[] {
                        "Fundamentals of Cooking",
                        "Neelix",
                        "Mess Hall",
                        "4/3/2014 10:00 AM"});
#line 17
 testRunner.Given("I have the course information", ((string)(null)), table2, "Given ");
#line 23
 testRunner.When("I get a list of available courses", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.Then("I should see Janeway is instructing Introduction to Command", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "GherkinTable")]
        [Xunit.TraitAttribute("Description", "Verify scheduled datetime for course")]
        public virtual void VerifyScheduledDatetimeForCourse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify scheduled datetime for course", ((string[])(null)));
#line 26
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Instructor",
                        "Location",
                        "Scheduled"});
            table3.AddRow(new string[] {
                        "Introduction to Command",
                        "Janeway",
                        "Ready Room",
                        "4/3/2014 8:00 AM"});
            table3.AddRow(new string[] {
                        "Logic And You",
                        "Tuvok",
                        "Starboard Large Meeting Room",
                        "4/3/2014 9:00 AM"});
            table3.AddRow(new string[] {
                        "Warp Core Basics",
                        "Torres",
                        "Engineering Meeting Room 3",
                        "4/3/2014 9:00 AM"});
            table3.AddRow(new string[] {
                        "Fundamentals of Cooking",
                        "Neelix",
                        "Mess Hall",
                        "4/3/2014 10:00 AM"});
#line 27
 testRunner.Given("I have the course information", ((string)(null)), table3, "Given ");
#line 33
 testRunner.When("I get a list of available courses", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
 testRunner.Then("I should see Introduction to Command is scheduled for 4/3/2014 8:00 AM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                GherkinTableFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                GherkinTableFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
